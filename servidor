#!/usr/bin/env python3
"""Defines a simple chatting application server."""
import re
import socket

CLIENT_CLOSED_CONNECTION = ''
CLIENT_SENT_NICK = '\A/nick ([a-zA-Z]+)'
CLIENT_RENAMED_NICK = '\A/rename ([a-zA-Z]+) ([a-zA-Z]+)'


class User:
    def __init__(self):
        self.nickname = ""
        self.status = "UNNAMED"


def recvln(conn):
    """Return a full line from the connection."""
    print("Recebendo linha...\n")
    char = conn.recv(1)
    buffr = b''
    while True:
        buffr += char
        char = conn.recv(1)
        if char == b'\n' or char == b'':
            print("Linha recebida!\n")
            return buffr

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)

s.bind(('', 7000))
s.listen(5)

print("Aguardando conexão...\n")
conexao, endereco = s.accept()
while True:
    user = User()
    print("Conectado! Recebendo dados...\n")
    message = recvln(conexao)
    message = message.decode()
    if message == CLIENT_CLOSED_CONNECTION:
        print("Usuário encerrou a conexão em seu cliente...\n")
        conexao.close()
        break
    elif re.match(CLIENT_SENT_NICK, message):
        print("Usuário enviou seu nickname/apelido.\n")
        user.nickname = message.split()[1]
        conexao.send("/joined %s\n".format(user.nickname).encode())
    elif re.match(CLIENT_RENAMED_NICK, message):
        print("Usuário atualizou seu nickname/apelido.\n")
        old_nick = message.split()[1]
        if old_nick == user.nickname:
            user.nickname = message.split()[2]
            conexao.send(b"/joined\n")

    else:
        print("Error! Enviando resposta padrão /error...\n")
        conexao.send(b"/error\n")
    print("Enviado! Repetindo fluxo...\n")
print("Conexão encerrada.\n")
